package com.amrita.java.collections;

import java.util.Collections;
import java.util.HashSet;
import java.util.Iterator;
import java.util.Set;
import java.util.TreeSet;

public class SetsDemo {

	public static void main(String args[]) {
		// Sets
		// Sets do not allow duplicates
		// Lets look at HashSet first. HashSet does not support any ordering.
		Set<String> family = new HashSet<String>();
		family.add("Tejas");
		family.add("fgfggh");
		family.add("Aarna");
		family.add("Amrita");
		Iterator<String> iterator = family.iterator();
		while (iterator.hasNext())
			System.out.println(iterator.next());

		// Lets look at TreeSet next. TreeSet stores objects in Sorted Order.
		
		
		Set<String> treeSet = new TreeSet<String>();
		
		treeSet.add("Tejas");
		treeSet.add("Amrita");
		treeSet.add("Aarna");
		System.out.println("Treeset values printed in sorted order");
		System.out.println(treeSet);// 5
		Iterator<String> iterator1 = treeSet.iterator();
		while (iterator1.hasNext())
			System.out.println(iterator1.next());
		// Objects that are inserted into a TreeSet should be comparable
		
		
		
		// NavigableSet interface
		// Two classes implement them - TreeSet and TreeMap

		TreeSet<String> treeSet1 = new TreeSet<String>();
		treeSet1.add("Tejas");
		treeSet1.add("Amrita");
		treeSet1.add("Aarna");
		System.out.println("lower"+treeSet1.lower("Amrita"));// 5
		System.out.println(treeSet1.floor("Amrita"));
		System.out.println(treeSet1.higher("Amrita"));
		System.out.println(treeSet1.ceiling("Amrita"));
		
		TreeSet<String> treeSet2=(TreeSet<String>) treeSet1.descendingSet();
		System.out.println("Original Treeset"+ treeSet1);
		System.out.println("Descended order of treeset"+ treeSet2);
		
	}
}
